
// Generated by Cadence Genus(TM) Synthesis Solution 22.13-s093_1
// Generated on: Jun  3 2025 21:34:58 CST (Jun  4 2025 03:34:58 UTC)

// Verification Directory fv/counter 

module counter(clk_i, rst_n_i, q_o);
  input clk_i, rst_n_i;
  output [2:0] q_o;
  wire clk_i, rst_n_i;
  wire [2:0] q_o;
  wire n_7, n_8, n_30, n_31, n_33, n_34, n_35, n_36;
  wire n_37;
  not g1 (n_31, rst_n_i);
  not g4 (n_30, q_o[0]);
  nand g19 (n_33, q_o[0], q_o[1]);
  nand g22 (n_34, n_33, q_o[2]);
  or g23 (n_35, n_33, q_o[2]);
  nand g24 (n_8, n_34, n_35);
  or g25 (n_36, wc, q_o[0]);
  not gc (wc, q_o[1]);
  or g26 (n_37, q_o[1], wc0);
  not gc0 (wc0, q_o[0]);
  nand g27 (n_7, n_36, n_37);
  CDN_flop \q_o_reg[0] (.clk (clk_i), .d (n_30), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (n_31), .srd (1'b0), .q (q_o[0]));
  CDN_flop \q_o_reg[1] (.clk (clk_i), .d (n_7), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (n_31), .srd (1'b0), .q (q_o[1]));
  CDN_flop \q_o_reg[2] (.clk (clk_i), .d (n_8), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (n_31), .srd (1'b0), .q (q_o[2]));
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
